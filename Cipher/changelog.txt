===
r14:
- CipherDB has been changed to an abstract class instead of being an explicit implementation to a particular way of saving and reading data
- The old PostgreSQL-based CipherDB implements such an abstraction in CipherDBPostgreSQL and is still used to demo Cipher
- Testing CipherDB implementation with file-written JSON in CipherJSONDB to illustrate the abstraction beyond SQL relational databases
- Working on minimalistic, dependency free JSON-parsing
- Tidied up planned class architecture; e.g. Entity replaces Building for better abstraction, Command abstract class and its extensions etc
- CipherParameter helps wrap generic parameters attributed to Cipher objects for which the exact class type is unknown

===
r13:
- Edge now inherits Tile class; Edge is a special case of a Tile
- Removing redundancy in code due to Edge inheriting Tile
- Edge incorporates the enum Facing, which indicates to which direction the side is pointing
- Ordered SQL SELECT calls
- Gfx engine represents "render map" calls properly for a bit of eye-candy

===
r12:
- Basic rendering of edges and tiles
- enum Facing is determining direction (compass directions in addition to z-shifts) 
- Obtaining slices from the z-planes
- Command line allows testing of rasterized naive PNG bitmap images maps consisting of edges and tiles (i.e. isometric view to the map)

===

r11:
- Basic graphics engine to render static tile/edge maps
- Edges extended to be able to work over z-shifts (i.e. floors/ceilings)
- Map class for convenient bundling of Tile/Edge class members
- Full stack development testing with Spring/Vaadin

===

r10:
- Outlining an isometric 60x60 unit box layout for a first attempt at a visualized world view
- Tuning some minor stuff, lots of clean-up left on TODO

===

r9:
- Moved from MySQL/MariaDB to PostgreSQL
- edgetype and tiletype tables in the database

===

r1-r8:
- Basic implementation of necessary classes
- Edges and tiles to portrait the world
- Basic command line to interact with Cipher
